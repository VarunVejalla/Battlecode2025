
public static long getSquareHasUnfinishedRuin(int index){
    switch(index){
		case 0:
			return 0x1DF19F1F199E1190L;
		case 1:
			return 0x19F19E1E119E1190L;
		case 2:
			return 0x19E11E1E119E1190L;
		case 3:
			return 0x99E95E1E119E1190L;
		case 4:
			return 0x9BE95E9E959E1190L;
		case 5:
			return 0x5DD19F5D19DD1800L;
		case 6:
			return 0x1DD19F1D19981000L;
		case 7:
			return 0x19D19E1811981000L;
		case 8:
			return 0x19811E1811981000L;
		case 9:
			return 0x99A95E1811981000L;
		case 10:
			return 0x9BA95E9A95981000L;
		case 11:
			return 0xBBA95EBA95BA9400L;
		case 12:
			return 0x5DD59D5D59554948L;
		case 13:
			return 0x5DD19D5D19450800L;
		case 14:
			return 0x1DD19D1D18000000L;
		case 15:
			return 0x19D1981810000000L;
		case 16:
			return 0x1981181810000000L;
		case 17:
			return 0x99A9581810000000L;
		case 18:
			return 0x9BA95A9A94000000L;
		case 19:
			return 0xBBA95ABA94A28400L;
		case 20:
			return 0xBBAB5ABAB4AAA4A4L;
		case 21:
			return 0x55D5955549554948L;
		case 22:
			return 0x55D1954509450800L;
		case 23:
			return 0x15D1850508000000L;
		case 24:
			return 0x1D1800000000000L;
		case 25:
			return 0x181000000000000L;
		case 26:
			return 0x81A9400000000000L;
		case 27:
			return 0x8BA9428284000000L;
		case 28:
			return 0xABA94AA284A28400L;
		case 29:
			return 0xABAB4AAAA4AAA4A4L;
		case 30:
			return 0x5554955549554948L;
		case 31:
			return 0x5450954509450800L;
		case 32:
			return 0x1450850508000000L;
		case 33:
			return 0x50800000000000L;
		case 34:
			return 0x0L;
		case 35:
			return 0x8028400000000000L;
		case 36:
			return 0x8A28428284000000L;
		case 37:
			return 0xAA284AA284A28400L;
		case 38:
			return 0xAAAA4AAAA4AAA4A4L;
		case 39:
			return 0x7556B55549554948L;
		case 40:
			return 0x7456B54509450800L;
		case 41:
			return 0x7456A50508000000L;
		case 42:
			return 0x6056A00000000000L;
		case 43:
			return 0x6006200000000000L;
		case 44:
			return 0xE02E600000000000L;
		case 45:
			return 0xEA2E628284000000L;
		case 46:
			return 0xEA2E6AA284A28400L;
		case 47:
			return 0xEAAE6AAAA4AAA4A4L;
		case 48:
			return 0x7756B5756B554948L;
		case 49:
			return 0x7656B5656B450800L;
		case 50:
			return 0x7656A5656A000000L;
		case 51:
			return 0x6656A06062000000L;
		case 52:
			return 0x6606206062000000L;
		case 53:
			return 0xE62E606062000000L;
		case 54:
			return 0xEE2E62E2E6000000L;
		case 55:
			return 0xEE2E6AE2E6A28400L;
		case 56:
			return 0xEEAE6AEAE6AAA4A4L;
		case 57:
			return 0xF656B5E56B656A00L;
		case 58:
			return 0xF656A5E56A606200L;
		case 59:
			return 0xE656A1E062606200L;
		case 60:
			return 0xE60621E062606200L;
		case 61:
			return 0xE62E61E062606200L;
		case 62:
			return 0xEE2E63E2E6606200L;
		case 63:
			return 0xEE2E6BE2E6E2E600L;
		case 64:
			return 0xF65EA5E5EA61E262L;
		case 65:
			return 0xE65EA1E1E261E262L;
		case 66:
			return 0xE61E21E1E261E262L;
		case 67:
			return 0xE63E61E1E261E262L;
		case 68:
			return 0xEE3E63E3E661E262L;
		default:
			throw new RuntimeException("Index out of bounds");
    }
}
    