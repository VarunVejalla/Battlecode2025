
public static long getPotentialRCAlreadyMarkedInvalid(int index){
    switch(index){
		case 0:
			return 0xDDFDFFDFDFFFFFFFL;
		case 1:
			return 0xDFFDDFDFDDFFFFFFL;
		case 2:
			return 0xFFF9DFFF9DFFFFFFL;
		case 3:
			return 0xBFFBDFBFBDFFFFFFL;
		case 4:
			return 0xBBFBFFBFBFFFFFFFL;
		case 5:
			return 0x5DFFFF5FFFDFFFFFL;
		case 6:
			return 0xDDFDFF5FDFDFDFFFL;
		case 7:
			return 0xDFFDDFDFDDDFDDFFL;
		case 8:
			return 0xFFF9DFFF9DFF9DFFL;
		case 9:
			return 0xBFFBDFBFBDBFBDFFL;
		case 10:
			return 0xBBFBFEBFBFBFBFFFL;
		case 11:
			return 0xBBFFFEBFFFBFFFFFL;
		case 12:
			return 0x7DF7FF7F7FFFFFFFL;
		case 13:
			return 0x7DF7FF5F7FDF7FFFL;
		case 14:
			return 0xFDFFFF5F5FDF5FDFL;
		case 15:
			return 0xFFFFFFDFDDDF5DDDL;
		case 16:
			return 0xFFFFFFFF9DFF9D9DL;
		case 17:
			return 0xFFFFFFBFBDBEBDBDL;
		case 18:
			return 0xFBFFFEBEBFBEBFBFL;
		case 19:
			return 0xFBEFFEBEFFBEFFFFL;
		case 20:
			return 0xFBEFFEFEFFFFFFFFL;
		case 21:
			return 0x7FF7BF7F7BFFFFFFL;
		case 22:
			return 0x7FF7BF7F7BDF7BFFL;
		case 23:
			return 0xFFFFFF7F7BDF5BDBL;
		case 24:
			return 0xFFFFFFFFFFDF59D8L;
		case 25:
			return 0xFFFFFFFFFFFF9D90L;
		case 26:
			return 0xFFFFFFFFFFBEB5B4L;
		case 27:
			return 0xFFFFFEFEF7BEB7B7L;
		case 28:
			return 0xFFEF7EFEF7BEF7FFL;
		case 29:
			return 0xFFEF7EFEF7FFFFFFL;
		case 30:
			return 0xFFD7BFFD7BFFFFFFL;
		case 31:
			return 0xFFD7BFFD7BFD7BFFL;
		case 32:
			return 0xFFFFFFFD7BFD7B5BL;
		case 33:
			return 0xFFFFFFFFFFFD7B48L;
		case 34:
			return 0xFFFFFFFFFFFFFE00L;
		case 35:
			return 0xFFFFFFFFFFFAF6A4L;
		case 36:
			return 0xFFFFFFFAF7FAF6B7L;
		case 37:
			return 0xFFAF7FFAF7FAF7FFL;
		case 38:
			return 0xFFAF7FFAF7FFFFFFL;
		case 39:
			return 0xFFDFBDFDFBFFFFFFL;
		case 40:
			return 0xFFDFBDFDFB7DFBFFL;
		case 41:
			return 0xFFFFFDFDFB75FB7BL;
		case 42:
			return 0xFFFFFFFFFF75EB6AL;
		case 43:
			return 0xFFFFFFFFFFE7EE62L;
		case 44:
			return 0xFFFFFFFFFEEBE6E6L;
		case 45:
			return 0xFFFFFBFBF6EBF6F7L;
		case 46:
			return 0xFFBF7BFBF6FBF7FFL;
		case 47:
			return 0xFFBF7BFBF7FFFFFFL;
		case 48:
			return 0xF7DFFDFDFFFFFFFFL;
		case 49:
			return 0xF7DFF5FDFF7DFFFFL;
		case 50:
			return 0xF7FFF5F5FF75FF7FL;
		case 51:
			return 0xFFFFF7F7EF75EF6FL;
		case 52:
			return 0xFFFFFFE7EFE7EE6FL;
		case 53:
			return 0xFFFFEFEFEEEBEEEFL;
		case 54:
			return 0xEFFFEBEBFEEBFEFFL;
		case 55:
			return 0xEFBFEBFBFEFBFFFFL;
		case 56:
			return 0xEFBFFBFBFFFFFFFFL;
		case 57:
			return 0xF7FFF5FFFF7FFFFFL;
		case 58:
			return 0xF77FF5F7FF77FFFFL;
		case 59:
			return 0xFF7EF7F7EF77EFFFL;
		case 60:
			return 0xFE7EFFE7EFE7EFFFL;
		case 61:
			return 0xFEFEEFEFEEEFEFFFL;
		case 62:
			return 0xEEFFEBEFFEEFFFFFL;
		case 63:
			return 0xEFFFEBFFFEFFFFFFL;
		case 64:
			return 0xF77FF7F7FFFFFFFFL;
		case 65:
			return 0xFF7EF7F7EFFFFFFFL;
		case 66:
			return 0xFE7EFFE7EFFFFFFFL;
		case 67:
			return 0xFEFEEFEFEFFFFFFFL;
		case 68:
			return 0xEEFFEFEFFFFFFFFFL;
		default:
			throw new RuntimeException("Index out of bounds");
    }
}
    